"use client";

import React, { useEffect, useState } from "react";

interface Product {
  id: string; 
  title: string;
  url?:string;
  images:{
    id: string;
    src: string
  }[];
  // url: string; 
}


const WishlistPage: React.FC = () => {
  const [products, setProducts] = useState<Product[]>([]);
  const [wishlist, setWishlist] = useState<Product[]>([]);
  const [loading, setLoading] = useState<boolean>(true); 
  const [error, setError] = useState<string | null>(null); 

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        const response = await fetch("/api/products");
        if (!response.ok) {
          throw new Error("Failed to fetch products");
        }
        const data = await response.json();
        setProducts(data.products);
        // const data: Product[] = await response.json();
        // setProducts(data);
        
      } catch (err) {
        setError((err as Error).message);
      } finally {
        setLoading(false);
      }
    };

    fetchProducts();
  }, [])

  const handleAddToWishlist = (product: Product): void => {
    setWishlist((prevWishlist) => [...prevWishlist, product]);
  };

  const handleRemoveFromWishlist = (index: number): void => {
    setWishlist((prevWishlist) =>
      prevWishlist.filter((_, i) => i !== index)
    );
  };

  return (
    <div>
      <h1>Explore Products</h1>
      {loading ? (
        <p>Loading products...</p>
      ) : error ? (
        <p>{error}</p>
      ) : products.length > 0 ? (
        <div>
          {products.map((product) => (
            <div key={product.id}>
              <h3>{product.title}</h3>
              {product.images.length > 0 ? (
                <img 
                  src={product.images[0].src} 
                  alt={product.title}
                  style={{ width: "200px", height: "auto"}}
                />
              ) : (
                <p>No image available</p>
              )}
              <button onClick={() => handleAddToWishlist(product)}>
                Add to Wishlist
              </button>
            </div>
          ))}
        </div>
      ) : (
        <p>No products available.</p>
      )}

      <h2>Your Wishlist</h2>
      {wishlist.length > 0 ? (
        <ul>
          {wishlist.map((product, index) => (
            <li key={product.id}>
              <span>{product.title}</span>
              <button onClick={() => handleRemoveFromWishlist(index)}>
                Remove
              </button>
            </li>
          ))}
        </ul>
      ) : (
        <p>Your wishlist is empty.</p>
      )}
    </div>
  );
};

export default WishlistPage;